package org.training.leisure.swimmingpool;

import java.lang.Number;
import java.math.BigDecimal;

rule "CalculateTotal"
	dialect "java"
	ruleflow-group "subscription"
	when
		not (Price( priceType == "definitive" )) 
		stdtPrice : BigDecimal( ) from accumulate ( Person( sp : standardPrice != null ),
			init( BigDecimal res = new BigDecimal("0.0"); ),
			action( res = res.add(sp); ),
			reverse( res = res.subtract(sp); ),
			result( res )
) 
		reductValue : BigDecimal( ) from accumulate ( Price( aa : amount != null ),
			init( BigDecimal res = new BigDecimal("0.0"); ),
			action( res = res.add(aa); ),
			reverse( res = res.subtract(aa); ),
			result( res )
) 
		qq : Quote( )
	then
		Price definitivePrice = new Price();
		definitivePrice.setPriceType( "definitive" );
		definitivePrice.setAmount( stdtPrice.subtract(reductValue) );
		definitivePrice.setDescription( "Final" );
		definitivePrice.setQuote( qq );
		insert( definitivePrice );
end
